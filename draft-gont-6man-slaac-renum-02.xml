<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc strict="no" ?>

<rfc updates="4861, 4862" category="std"  ipr="trust200902"
docName="draft-gont-6man-slaac-renum-02">
  <front>
    <title abbrev="Reaction to Renumbering Events">Improving the Robustness of Stateless Address Autoconfiguration (SLAAC) to Flash Renumbering Events</title>


    <author fullname="Fernando Gont" initials="F." surname="Gont">

      <organization abbrev="SI6 Networks / UTN-FRH">SI6 Networks /
UTN-FRH</organization>
      <address>
        <postal>
          <street>Segurola y Habana 4310, 7mo Piso</street>
<!--          <code>1706</code> -->
          <city>Villa Devoto</city>
          <region>Ciudad Autonoma de Buenos Aires</region>
          <country>Argentina</country>
        </postal>
        <phone>+54 11 4650 8472</phone>
        <email>fgont@si6networks.com</email>
        <uri>https://www.si6networks.com</uri>
       </address>
    </author>


    <author fullname="Jan Zorz" initials="J." surname="Zorz">

<!--
      <organization abbrev="SI6 Networks / UTN-FRH">SI6 Networks /
UTN-FRH</organization>
-->
      <address>
        <postal>
          <street>Frankovo n. 165</street>
<!--          <code>1706</code> -->
          <city>Skofja Loka</city>
<!--          <region>Ciudad Autonoma de Buenos Aires</region> -->
          <country>Slovenia</country>
        </postal>
        <email>jan@go6.si</email>

      </address>
    </author>

<author initials="R." surname="Patterson" fullname="Richard Patterson">

      <organization>Sky UK</organization>

      <address>

        <email>richard.patterson@sky.uk</email>

      </address>

    </author>

 

    <date/>

    <area>Internet</area>
    <workgroup>IPv6 Maintenance (6man) Working Group</workgroup>

<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/search.html. -->

<keyword></keyword>



    <abstract>
      <t><!--A very common IPv6 deployment scenario is that in which a CPE router employs DHCPv6 Prefix Delegation to obtain an IPv6 prefix, and at least one prefix from within the leased prefix is advertised on a local network via SLAAC. -->In scenarios where an IPv6 prefix suddenly becomes invalid, hosts on the local network will continue using stale prefixes for an unacceptably long period of time, thus resulting in connectivity problems. This document analyzes possible improvements to IPv6 Stateless Address Autoconfiguration to improve its robustness in such scenarios.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" title="Introduction">
<t>IPv6 network renumbering is expected to take place in a planned manner, with old/stale prefixes being phased-out via reduced prefix lifetimes while new prefixes (with normal lifetimes) are introduced. However, there are a number of scenarios that may lead to the so-called "flash-renumbering" events, where the prefix being employed on a network suddenly becomes invalid and replaced by a new prefix <xref target="I-D.gont-v6ops-slaac-renum"/>.  In such scenarios, hosts on the local network will continue using stale prefixes for an unacceptably long period of time, thus resulting in connectivity problems. <xref target="I-D.gont-v6ops-slaac-renum"/> discusses this problem in detail, while this document focuses on the protocol aspects of this problem.</t>


<t>In some scenarios, the local router producing the network renumbering event may try to deprecate the currently-employed prefixes (thus explicitly signaling the network about the renumbering event), whereas in other scenarios it may be unaware about the renumbering event and thus unable singal hosts about it.</t>


<t>From the perspective of a SLAAC host, there are two different (but related) problems to be solved:
<list>
<t>Avoiding the use of stale addresses for new communication instances</t>
<t>Performing "garbage collection" for the stale prefixes (and related network configuration information)</t>
</list>
</t>

<t>Clearly, if a host has both working and stale addresses, it is paramount that it employs working addresses for new communication instances. Additionally, a host should also perform garbage collection for the stale prefixes/addresses, since they not only tie system resources, but also prevent communication with the new "owners" of the stale prefixes.</t>

</section>

<section title="Terminology" anchor="term">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in BCP 14 <xref target='RFC2119' /> <xref target='RFC8174' /> when, and only when, they
      appear in all capitals, as shown here.
</t>

</section>


<section title="SLAAC reaction to Flash-renumbering Events" anchor="problem">

<t>As noted in <xref target="intro"/>, in some scenarios the router triggering the renumbering event may be able able to explicitly signal the network about this event, while in other scenarios the renumbered hosts may need to infer a renumbering event is taking place. The following subsections analyzes specific considerations for each of these scenarios.</t>

<section title="Renumbering without Explicit Signaling">

<t>In the absence of explicit signalling from SLAAC routers (such as sending PIOs with small lifetimes to deprecate the stale prefixes), stale prefixes will remain preferred and valid according to the Preferred Lifetime and Valid Lifetime values (respectively) of the last received PIO. IPv6 SLAAC employs the following default values for PIOs:
<list style="symbols">
<t>Preferred Lifetime (AdvPreferredLifetime): 604800 seconds (7 days)</t>
<t>Valid Lifetime (AdvValidLifetime): 2592000 seconds (30 days)</t>
</list>
</t>

<t>This means that, in the abscence of explicit signaling by a SLAAC router to deprecate a prefix, it will take a host 7 days (one week) to un-prefer the corresponding addresses, and 30 days (one month) to eventually remove any addresses configured for the stale prefix. Clearly, for any practical purposes, employing such long default values is equivalent of not using any timers at all, since taking 7 days or 30 days (respectively) to recover from a network problem is simply unacceptable.</t>

<t>Use of more appropriate timers in Router Advertisement messages can help limit the amount of time that hosts will maintain stale configuration information. Additionally, hosts are normally in a postition to infer that a prefix has become invalid -- for example, if a given router ceases to advertise an existing prefix and at the same time starts to advertise a new prefix.</t>

<t><xref target="router-config"/> recommends the use of more appropriate lifetimes for Prefix Information Options (PIOs), while <xref target="hosts-config"/> proposes to cap the accepted Valid Lifetime and Preferred Lifetime values at hosts, such that more appropriate values are employed even in the presence of legacy routers.</t>

<t><xref target="stale-config"/> specifies a local policy that SLAAC hosts can implement to heuristically infer that network configuration information has changed, such that stale confifiguration can be phased out.</t>
</section>


<section title="Renumbering with Explicit Signaling">

<t>In scenarios where the local router is aware about the renumbering event, it may try to phase out the stale network configuration information. In these scenarios, there are two aspects to be considered:
<list style="symbols">
<t>The amount of time during which the router should continue trying to deprecate the stale network configuration information</t>
<t>The ability of SLAAC hosts to phase out stale configuration in a timiler manner.</t>
</list>
</t>

<t>In the abscence of RAs that include PIOs that would reduce the Valid Lifetime and Preferred Lifetime of a prefix, hosts would normally employ the lifetime values from PIO option of the last received RA messages. Since the network could be partitioned for an arbitrarily large amount fo time, a router would need to try to "unprefer" a prefix for the amount of time employed for the "Preferred Lifetime", and try to invalidate the prefix for the amount of time employed for the "Valid Lifetime" (see Section 12 of <xref target="RFC4861"/>). 
</t>
<t>
<list style="hanging">
<t hangText="NOTE:">Once the number of seconds in the original "Preferred Lifetime" have elapsed, all hosts would have "unpreferred" the corresponding addresses, while once the number of seconds in the "Valid Lifetime" have elapsed, the corresponding addresses would be invalidated and removed.
</t>
</list>
</t>
<t>Thus, use of more appropriate default lifetimes for PIOs, as proposed in <xref target="router-config"/>, would reduce the amount of time a stale prefix would need to be announced by a router meaning to unprefer/invalidate it.</t>


<t>In scenarios where a router has positive knowledge that a prefix has become invalid and thus signal this condition to local hosts, the current specifications will prevent SLAAC hosts from fully recovering from such stale information. Item "e)" of Section 5.5.3 of <xref target="RFC4862"/> specifies that an RA may never reduce the "RemainingLifetime" more than to two hours. If the RemainingLifetime of an address is smaller than 2 hours, then a Valid Lifetime smaller than 2 hours will be ignored. This means that communication with the new "owners" of the stale prefix will not be possible, since the stale prefix will still be considered "on-link". On the other hand, the Preferred Lifetime of an address *can* be reduced to any value to avoid the use of a stale prefix to be employed for new communications. 
</t>
<t><xref target="sig-stale-config"/> updates <xref target="RFC4862"/> such that this restriction in removed, and hosts react to the advertised "Valid Lifetime" (even if it is smaller than 2 hours).</t>
<t>Finally, <xref target="init"/> specifies that routers advertise disseminate network configuration information when a network interface is initialized.</t>
</section>


</section>


      <section title="Improvements to SLAAC" anchor="host-side">

<section title="More Appropriate Lifetime Values" anchor="timers">

<section title="Router Configuration Variables" anchor="router-config">

<t>The default value for the "lifetime" parameters in PIOs is updated as follows:

<list>
<t>AdvValidLifetime: 48 * AdvDefaultLifetime</t>
<t>AdvPreferredLifetime: AdvDefaultLifetime</t>
</list>
</t>

<!--
<t>
<list style="hanging">
<t hangText="NOTE:">
A SLAAC router will periodically refresh the Preferred Lifetime and the Valid Lifetime of an advertised prefix to AdvPreferredLifetime and AdvValidLifetime, respectively, as long as the resulting lifetime of the corresponding prefixes does not extend past the DHCPv6-PD lease time.
</t>
</list>
</t>
-->


<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>The default values for PIO lifetimes should be such that, under normal circumstances (including some packet loss), the associated timers are refreshed/reset, but in the presence of network faults (such as network configuration information becoming stale), some fault recovering action (such as un-preferring the corresponding addresses and subsequently removing them) is triggered.
</t>
<t>In the context of <xref target="RFC8028"/>, where it is clear that use of addresses configured for a given prefix is tied to using the next-hop router that advertised the prefix, the "Preferred Lifetime" of a PIO should never be larger than the "Router Lifetime" (AdvDefaultLifetime) of Router Advertisement messages. Some leeway should be provided for the "Valid Lifetime" to cope with transient network problems.</t>

<t>As a result, this document updates <xref target="RFC4861"/> such that the default Valid Lifetime (AdvValidLifetime) and the default Preferred Lifetime (AdvPreferredLifetime) of PIOs are specified as a function of the "Router Lifetime" (AdvDefaultLifetime) of Router Advertisement messages.</t>


<t>In the abscense of RAs that refresh information, addresses configured for advertised prefixes become un-preferred in a timelier manner, and thus Rule 3 of <xref target="RFC6724"/> will cause other configured addresses (if available) to be preferred.</t>
<!--
<t>Reducing the Valid Lifetime and Preferred Lifetimes of PIOs limits the amount of time hosts may use stale prefixes, and also limits the amount of time that a stale prefix needs to be advertised with a lifetime of "0" on the local network (see Section 12 of <xref target="RFC4861"/>).</t> -->
</list>
</t>
</list>
</t>
</section>


<section title="Processing of PIO Lifetimes at Hosts" anchor="hosts-config">
<!-- <t>Hosts that, for some reason, do not implement the recovery algorithm specified in <xref target="stale-config"/> SHOULD cap the "Valid Lifetime" and "Preferred Lifetime" of PIOs as follows:
-->
<t>Hosts SHOULD cap the "Valid Lifetime" and "Preferred Lifetime" of PIOs as follows:
<list style="symbols">
<t>Valid Lifetime= MIN(Valid Lifetime, 48 * "Router Lifetime")</t>
<t>Preferred Lifetime= MIN(Preferred Lifetime, "Router Lifetime")</t>
</list>

</t>

<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Capping the lifetimes in PIOs as suggested will not eliminate the problem discussed in this document, but will certainly reduce the amount of time it takes for hosts to converge to updated network configuration information, even when the SLAAC router advertises PIOs with the default values specified in <xref target="RFC4861"/> (as opposed to the new default values specified in <xref target="router-config"/>) and when the corresponding router ceases to send RAs.
</t>
</list>
</t>
</list>
</t>


</section>
</section>  <!-- timers -->


<section title="Updated Processing of Prefix Information OPtions" anchor="sig-stale-config">

<t>The entire item "e)" (pp. 19-20) from Section 5.5.3 of <xref target="RFC4862"/> is replaced with the following text:
<list style="hanging">
<t>e)  If the advertised prefix is equal to the prefix of an address
      configured by stateless autoconfiguration in the list, the
      valid lifetime and the preferred lifetime of the address is reset to the Valid Lifetime and the Preferred
      Lifetime (respectively) in the received advertisement.
</t>
</list>
</t>

<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>
This change allows hosts to react to the information provided by a router that has positive knowledge that a prefix has become invalid.
</t>
<t>Attacks aiming to disable an advertised prefix via a Valid Lifetime of 0 are not really more harmful than other attacks via forged RA messages, such as those aiming at completely disabling a next-hop router via an RA that advertises a Router Lifetime of 0 or at performing a Denial of Service (DoS) by advertising illegitimate prefixes via PIOs. In scenarios where RA-based attacks are of concern, proper mitigations such as RA-Guard <xref target="RFC6105"/> <xref target="RFC7113"/> should be implemented.
</t>
</list>
</t>
</list>
</t>
</section>


<section title="Interface Initialization" anchor="init">
<t>When an interface is initialized, it is paramount that network configuration information is spread on the corresponding network (particularly in scenarios where an interface has been re-initialized, and the conveyed information has changed). Thus, this document replaces the following text from Section 6.2.4 of <xref target="RFC4861"/>:
<list style="hanging">

<t>

   In such cases, the router MAY transmit up to
   MAX_INITIAL_RTR_ADVERTISEMENTS unsolicited advertisements, using the
   same rules as when an interface becomes an advertising interface.
</t>
</list>

with:

<list style="hanging">
<t>
   In such cases, the router SHOULD transmit 
   MAX_INITIAL_RTR_ADVERTISEMENTS unsolicited advertisements, using the
   same rules as when an interface becomes an advertising interface.
</t>
</list>
</t>
<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Use of stale information can lead to interoperability problems. Therefore, it is paramount that new configuration information is delivered in a timely manner to all hosts.</t>
</list>
</t>
</list>
</t>
</section>


<section title="Recovery from Stale Configuration Information without Explicit Signaling" anchor="stale-config">
<t>The goal of the algorithm specified in this section is to allow hosts to infer when a previously-advertised prefix has become stale, such that previously-configured addresses are "phased-out" and the host can transition to the newly-advertised prefixes in a timelier manner.</t>


<t>Host may normally infer when network configuration information has changed. For example, if a SLAAC router (as identified by its link-local address) has ceased to advertise a previously-advertised prefix and has also started to advertise new prefixes via PIOs, this should be considered an indication that network configuration information has changed. Implementation of this kind of heuristics would allow a timelier reaction to network configuration changes even in scenarios where there is no explicit signaling from the network -- thus improving robustness.
</t>


<t>
The basic premise behind this algorithm is that, when a router advertises new prefixes for address configuration (PIO with the "A" bit set), but fails to advertise the previously-advertised prefixes, this is an indication that the previously-advertised prefixes have become stale. Therefore, if this was the only router advertising this prefix, configured addresses for the stale prefixes should be "un-preferred" (such that they are not employed for new communication instances), and they should eventually be removed (if this condition persists).</t>

<t>The algorithm specified in this section updates the state of a configured address upon receipt of a number of consecutive RAs that, while carrying PIOs, fail to advertise a previously-advertised prefix. This algorithm can accommodate the (theoretical) scenario where a router may split PIOs among a number of RA messages.</t>


	<t>Local information maintained for each prefix advertised by each router is augmented with one counter named "LTA" (Lifetime Avoidance) that defaults to 0, that counts the number of consecutive RAs received from the corresponding router that do not advertise the corresponding prefix. 
<list style="hanging">
<t hangText="NOTE:">
Hosts are already expected to keep track of which router has advertised which prefix in order to be able to properly select the first-hop router in multiple-prefix networks <xref target="RFC8028"/> <xref target="RFC8504"/>. Throughout this specification, each router is identified by its link-local address.</t>
</list>
</t>

<t>This algorithm employs two configuration variables:
<list style="hanging">
<t hangText="LTA_RAS_UNPREFER:">
Number of consecutive RAs *not* carrying a given prefix from a given router that will cause the prefix to become unpreferred/deprecated. It defaults to LTA_RAS_UNPREFER_DEFAULT, which this document specifies as 2.
</t>
<t hangText="LTA_RAS_INVALID:">
Number of consecutive RAs *not* carrying a given prefix from a given router that will cause the prefix to become invalid. It defaults to LTA_RAS_INVALID_DEFAULT, which this document specifies as 4<!--40 * LTA_RAS_UNPREFER_DEFAULT. The default value is set to and arbitrarily large value that will limite the lifetime of a prefix while still acommodating possible transient network problems -->.
</t>
</list>
</t>

<t>After normal processing of Router Advertisement messages, Router Advertisements that contain at least one PIO MUST be processed as follows:

<list style="symbols">


	<t>The LTA counter for each prefix advertised in the current Router Advertisement should be set to 0.</t>

	<t>For each prefix that had been previously advertised by this router but that is not advertised via a PIO <!--with the "A" flag set -->in the received RA, proceed as follows:
		<list style="symbols">
			<t>Increment the LTA counter by one.</t>

			<t>IF LTA &gt;= LAT_RAS_INVALID, then:
				<list style="symbols">
<t>IF this is the only router advertising this prefix, set the "Valid Lifetime" of this prefix to 0. This will cause the removal of all addresses for this prefix and of any routes for this prefix associated with the this router.</t>
<t>ELSE IF this prefix is has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t>
</list>
</t>

			<t>ELSE IF LTA &gt;= LTA_RAS_UNPREFER, then:
				<list style="symbols">
					<t>IF this is the only router advertising this prefix, set the "Preferred Lifetime" of this prefix to 0. This will cause the corresponding addresses to become un-preferred/deprecated.</t>

					<t>ELSE IF this prefix is has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t>
				</list>
			</t>


		</list>
	</t>
</list>
</t>

<t><xref target="timeline"/> illustrates a possible packet exchange and the operation of the algorithm for a typical scenario.</t>


<t>NOTES:
<list style="symbols">
<t>The processing of RAs that do not contain any PIOs with the "A" bit set remains unaffected.</t>
<t>The aforementioned processing assumes that while network configuration information might be split among multiple RAs, PIOs will be spread among *at most* LTA_RAS_UNPREFER RAs. <!--This assumption avoids the use of any timers for this specific purpose.--></t>
<t>If the only prefix that has so far been advertised on the local network is the prefix that has become stale, and there is no other prefix being advertised, the traditional processing is unaffected (the mechanism discussed in this document will *never* be triggered because received RAs will not contain other PIOs with the "A" bit set). The logic here is that it is better to have some address, than no address at all.</t>

<t>The specified modification takes the conservative approach of first setting the "Preferred Lifetime" to 0 (such that addresses become non-preferred), and eventually setting the "Valid Lifetime" to 0 (such that addresses are completely removed). Once the addresses for this prefix have been removed, associated routes incorporated by the original  RA messages will also be removed.</t>
<t>In cases where this scenario has been triggered by a CPE router crashing and rebooting, it would take hosts less than one minute to mark the corresponding addresses as "not preferred" (when using the default value for LTA_RAS_UNPREFER), and less than five minutes to completely remove such addresses from the system (when using the default value for LAT_RAS_INVALID).
<list style="hanging">
<t>
Section 6.2.4 of <xref target="RFC4861"/> specifies that when an interface becomes an advertising interface, the first few unsolicited RAs (up to MAX_INITIAL_RTR_ADVERTISEMENTS, specified as 3) will be sent at intervals of at most MAX_INITIAL_RTR_ADVERT_INTERVAL (specified as 16 seconds). This means that, using the default value for LTA_RAS_UNPREFER (LTA_RAS_UNPREFER_DEFAULT=2), in the worst-case scenario it would take hosts 32 seconds to mark stale addresses as "not preferred". The fourth unsolicited RA will be sent after a random amount of time between MinRtrAdvInterval (default: 0.33 * MaxRtrAdvInterval) and MaxRtrAdvInterval (default: 600 seconds) has elapsed, thus meaning that, when using the default value for LTA_RAS_INVALID (LTA_RAS_INVALID_DEFAULT=4) the stale addresses would be removed after between 3.3 and 10 minutes of being marked as "not preferred".
</t>
</list>
</t>
</list>

</t>
      </section>
</section>


    <section title="IANA Considerations">
      <t>
This document has no actions for IANA.
</t>
    </section>

    <section title="Security Considerations">

<t>An attacker that could impersonate a router could forge multiple RA packets that contain PIOs of prefixes that are currently not advertised on the local network, to trigger the mechanism specified in this document to cause existing addresses to be deprecated. However, an attacker that can impersonate a router could more easily achieve the same goal by advertising the legitimate prefixes with both the "Preferred Lifetime" and "Valid Lifetime" set to 0, or perform a plethora of other possible of Denial of Service attacks based on forged RA messages. Therefore, when attacks based on forged RA packets are a concern, technologies such as RA-Guard <xref target="RFC6105"/> <xref target="RFC7113"/> should be deployed.</t>

<t>Capping the "Valid Lifetime" and "Preferred Lifetime" at hosts limit the length of the effects of a non-sustained attacks that employ forged RAs containing forged PIOs, since hosts would now be able to recover in a timelier manner.</t>

    </section>



<section title="Acknowledgments">
<t>The authors would lie to thank (in alphabetical order) Mikael Abrahamsson, Luis Balbinot, Brian Carpenter, Gert Doering, Nick Hilliard, Philip Homburg, Lee Howard, Christian Huitema, Albert Manfredi, Jordi Palet Martinez, Richard Patterson, Michael Richardson, Mark Smith, Tarko Tikan, and Ole Troan, for providing valuable comments on earlier versions of this document.</t>

<t>Fernando would like to thank <!--Niloofar Adeli (Shatel, Iran), -->Alejandro D'Egidio and Sander Steffann for a discussion of these issues. Fernando would also like to thank Brian Carpenter who, over the years, has answered many questions and provided valuable comments that has benefited his protocol-related work.</t>

      <t>The problem discussed in this document has been previously documented by Jen Linkova in <xref target="I-D.linkova-6man-default-addr-selection-update"/>, and also in <xref target="RIPE-690"/>.</t>
    </section>

  </middle>
  <back>

    <references title="Normative References">
	<?rfc include="reference.RFC.2119" ?>
	<?rfc include="reference.RFC.8415" ?>
	<?rfc include="reference.RFC.8028" ?>
	<?rfc include="reference.RFC.4861" ?>
	<?rfc include="reference.RFC.4862" ?>
	<?rfc include="reference.RFC.4941" ?>
	<?rfc include="reference.RFC.8174" ?>
	<?rfc include="reference.RFC.8504" ?>
	</references>





    <references title="Informative References">

	<?rfc include="reference.RFC.2827" ?>
	<?rfc include="reference.RFC.5927" ?>
	<?rfc include="reference.RFC.6105" ?>
	<?rfc include="reference.RFC.6724" ?>
<!--	<?rfc include="reference.RFC.7084" ?>  CPE -->
	<?rfc include="reference.RFC.7113" ?>
	<?rfc include="reference.RFC.7721" ?>
	<?rfc include="reference.I-D.linkova-6man-default-addr-selection-update" ?>
	<?rfc include="reference.I-D.gont-v6ops-slaac-renum" ?>
	<?rfc include="reference.I-D.gont-v6ops-cpe-slaac-renum" ?>




	<reference anchor="RIPE-690" target="https://www.ripe.net/publications/docs/ripe-690">
		<front>
			<title>Best Current Operational Practice for Operators: IPv6 prefix assignment for end-users - persistent vs non-persistent, and what size to choose</title>


    <author fullname="Jan Zorz" initials="J." surname="Zorz">

    </author>


    <author fullname="Sander Steffannz" initials="S." surname="Zorz">

    </author>
    <author fullname="Primoz Drazumeric" initials="P." surname="Drazumeric">

    </author>
    <author fullname="Mark Townsley" initials="M." surname="Townsley">

    </author>
    <author fullname="Andrew Alston" initials="J." surname="Alston">

    </author>
    <author fullname="Gert Doering" initials="G." surname="Doering">

    </author>
    <author fullname="Jordi Palet" initials="J." surname="Palet">

    </author>
    <author fullname="Jen Linkova" initials="J." surname="Linkova">

    </author>


    <author fullname="Luis Balbinot" initials="L." surname="Balbinot">

    </author>

    <author fullname="Kevin Meynell" initials="K." surname="Meynell">

    </author>


    <author fullname="Lee Howard" initials="L." surname="Howard">

    </author>






			<date month="October" year="2017"/>
		</front>
		<seriesInfo name="RIPE" value="690"/>
	</reference>







    </references>



<section anchor="timeline" title="Sample Timeline for Host Processing of RAs">
<t>The following example illustrates a sample packet exchange that illustrates the algorithm specified in <xref target="host-side"/>:</t>
<t>
<figure><artwork><![CDATA[
 Router                                           Host
       RA, PIO={2001:DB8:1::/64, L=1, A=1}
     -------------------------------------->
                                             [Host configures addrs
                                               for this prefix]
                                                  LTA=0

       RA, PIO={2001:DB8:1::/64, L=1, A=1}
     -------------------------------------->  
                                             [Normal proc. of RA]
                        .
                        .
[Router reboots]

       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->   {2001:DB8:1::/64,
                                                   LTA=1}
                        .
                        .
       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->   {2001:DB8:1::/64,
                                                   LTA=2}
                                            LTA==LTA_RAS_UNPREFER
                                                Pref. Lftime=0
                                                  
                        .
                        .
       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->  {2001:DB8:1::/64,
                                                   LTA=3}
                        .
                        .
       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->  {2001:DB8:1::/64,
                                                   LTA=4}
                                            LTA==LTA_RAS_INVALID
                                               Valid Lftime=0
                                               (Addr. Removed!)
]]></artwork></figure>
</t>
</section>


<section anchor="other" title="Analysis of Some Suggested Workarounds">
<t>[This section is to be removed before publication of this document as an RFC].</t>
<t>During the discussion of this document, some alternative workarounds were suggested (e.g. on the 6man list). The following subsections analyze these suggested workarounds, in the hopes of avoiding rehashing discussions.</t>

<section anchor="icmp" title="On a Possible Reaction to ICMPv6 Error Messages">
<t>It has been suggested that if configured addresses become stale, a CPE enforcing ingress/egress filtering BCP38 (<xref target="RFC2827"/>) might send ICMPv6 Type 1 (Destination Unreachable) Code 5 (Source address failed ingress/egress policy) error messages to the sending node, and that, upon receipt of such error messages, the sending node might perform heuristics that might help to mitigate the problem discussed in this document.</t>

<t>The aforementioned proposal has a number of drawbacks and limitations:
	<list style="symbols">
		<t>It assumes that the CPE enforces ingress/egress filtering <xref target="RFC2827"/>. While this is desirable behaviour, it cannot be relied upon.</t>
		<t>It assumes that if the CPE enforces ingress/egress filtering, the CPE will signal the packet drops to the sending node with ICMPv6 Type 1 (Destination Unreachable) Code 5 (Source address failed ingress/egress policy) error messages. While this may be desirable, <xref target="RFC2827"/> does not suggest signaling the packet drops with ICMPv6 error messages, let alone the use of specific error messages (such as Type 1 Code 5) as suggested.</t>
		<t>ICMPv6 Type 1 Code 5 could be interpreted as the employed address to be stale, but also as a selected route being inappropriate/suboptimal. If the later, un-preferring addresses or removing addresses upon receipt of these error messages would be inappropriate.</t>
		<t>Reacting to these error messages would create a new attack vector that could be explited from remote networks. This is of particular concern since ICMP-based attacks do not even require that the Source Address of the attack packets be spoofed <xref target="RFC5927"/>.</t>
	</list>
</t>
</section>

<section anchor="sas" title="On a Possible Improvement to Source Address Selection">

<t><xref target="RFC6724"/> specifies source address selection (SAS) for IPv6. Conceptually, it sorts the candidate set of source addresses for a given destination, based on a number of pair-wise comparison rules that must be successively applied until there is a "winning" address.</t>

<t>An implementation might improve source address selection, and prefer the most-recently advertised information. In order to incorporate the "freshness" of information in source address selection, an implementation would be updated as follows:
	<list style="symbols">
		<t>The node is assumed to maintain a timer/counter that is updated at least once per second. For example, the time(2) function from unix-like systems could be employed for this purpose.</t>
		<t>The local information associated with each prefix advertised via RAs on the local network is augmented with a "LastAdvertised" timestamp value. Whenever an RA with a PIO with the "A" bit set for such prefix is received, the "LastAdvertised" timestamp is updated with the current value of the timer/counter.</t>
		<t><xref target="RFC6724"/> is updated such that this rule is incorporated:
			<list style="hanging">
				<t hangText="Rule 7.5: Prefer fresh information">
   If one of the two source addresses corresponds to a prefix that has been more recently advertised, say LastAdvertised(SA) > LastAdvertised(SA), then prefer that address (SA in our case).
				</t>
			</list>
		</t>
	</list>
</t>

<t>A clear benefit of this approach is that a host will normally prefer "fresh" addresses over possibly stale addresses.</t>

<t>However, there are a number of drawbacks associated with this approach:
	<list style="symbols">
		<t>In scenarios where multiple prefixes are being advertised on the same LAN segment, the new SAS rule is *guaranteed* to result in non-deterministic behaviour, with hosts frequently changing the default source address. This is certainly not desirable from a troubleshooting perspective.</t>

		<t>Since the rule must be incorporated before "Rule 8: Use longest matching prefix" from <xref target="RFC6724"/>, it may lead to suboptimal paths.
		</t>

		<t>This new rule may help to improve the selection of a source address, but it does not help with the housekeeping of configured information:
			<list style="symbols">
				<t>If the stale prefix is re-used in another network, nodes employing stale addresses and routes for this prefixes will be unable to communicate with the new "owners" of the prefix, since the stale prefixes will most likely be considered "on-link".</t>
				<t>Given that currently recommended default value for the "Valid Lifetime" of PIOs is 2592000 seconds (30 days), it would take too long for hosts to remove the configured addresses and routes for the stale prefix. While the proposed update in <xref target="timers"/> of this document would mitigate this problem, the lifetimes advertised by the local SLAAC router are not under the control of hosts.</t>
			</list>
		</t>



	</list>
</t>

<t>As a result, updating IPv6 source address selection does not relieve nodes from improving their SLAAC implementations as specified in <xref target="host-side"/>, if at all desirable. On the other hand, the algorithm specified in <xref target="stale-config"/> would result in Rule 3 of <xref target="RFC6724"/> employing fresh addresses, without leading to undeterministic behaviour.
</t>
</section>
</section>

  </back>
</rfc>
<!--
Local Variables:
mode:xml
End:
=-->
