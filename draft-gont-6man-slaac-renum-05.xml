<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

<?rfc subcompact="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>
<?rfc strict="no" ?>

<rfc updates="4861, 4862" category="std"  ipr="trust200902"
docName="draft-gont-6man-slaac-renum-05">
  <front>
    <title abbrev="Reaction to Renumbering Events">Improving the Robustness of Stateless Address Autoconfiguration (SLAAC) to Flash Renumbering Events</title>


    <author fullname="Fernando Gont" initials="F." surname="Gont">

      <organization abbrev="SI6 Networks / UTN-FRH">SI6 Networks /
UTN-FRH</organization>
      <address>
        <postal>
          <street>Segurola y Habana 4310, 7mo Piso</street>
<!--          <code>1706</code> -->
          <city>Villa Devoto</city>
          <region>Ciudad Autonoma de Buenos Aires</region>
          <country>Argentina</country>
        </postal>
<!--        <phone>+54 11 4650 8472</phone> -->
        <email>fgont@si6networks.com</email>
        <uri>https://www.si6networks.com</uri>
       </address>
    </author>


    <author fullname="Jan Zorz" initials="J." surname="Zorz">


      <organization abbrev="Go6 Institute">Go6 Institute</organization>

      <address>
        <postal>
          <street>Frankovo naselje 165</street>
         <code>4220</code> 
          <city>Skofja Loka</city>
<!--          <region>Ciudad Autonoma de Buenos Aires</region> -->
          <country>Slovenia</country>
        </postal>
        <email>jan@go6.si</email>
        <uri>https://www.go6.si</uri>
      </address>
    </author>

<author initials="R." surname="Patterson" fullname="Richard Patterson">

      <organization>Sky UK</organization>

      <address>

        <email>richard.patterson@sky.uk</email>

      </address>

    </author>

 

    <date/>

    <area>Internet</area>
    <workgroup>IPv6 Maintenance (6man) Working Group</workgroup>

<!-- [rfced] Please insert any keywords (beyond those that appear in
the title) for use on http://www.rfc-editor.org/search.html. -->

<keyword></keyword>



    <abstract>
      <t><!--A very common IPv6 deployment scenario is that in which a CPE router employs DHCPv6 Prefix Delegation to obtain an IPv6 prefix, and at least one prefix from within the leased prefix is advertised on a local network via SLAAC. -->In renumbering scenarios where an IPv6 prefix suddenly becomes invalid, hosts on the local network will continue using stale prefixes for an unacceptably long period of time, thus resulting in connectivity problems. This document improves the reaction of IPv6 Stateless Address Autoconfiguration to such renumbering scenarios.</t>
    </abstract>
  </front>
  <middle>
    <section anchor="intro" title="Introduction">
<t>IPv6 network renumbering is expected to take place in a planned manner, with old/stale prefixes being phased-out via reduced prefix lifetimes while new prefixes (with normal lifetimes) are introduced. However, there are a number of scenarios that may lead to the so-called "flash-renumbering" events, where the prefix being employed on a network suddenly becomes invalid and replaced by a new prefix <xref target="I-D.ietf-v6ops-slaac-renum"/>.  In such scenarios, hosts on the local network will continue using stale prefixes for an unacceptably long period of time, thus resulting in connectivity problems. <xref target="I-D.ietf-v6ops-slaac-renum"/> discusses this problem in detail.</t>


<t>In some scenarios, the local router producing the network renumbering event may try to deprecate the currently-employed prefixes (thus explicitly signaling the network about the renumbering event), whereas in other scenarios it may be unaware about the renumbering event and thus unable signal hosts about it.</t>


<t>From the perspective of a Stateless Address Autoconfiguration (SLAAC) host, there are two different (but related) problems to be solved:
<list style="symbols">
<t>Avoiding the use of stale addresses for new communication instances</t>
<t>Performing "garbage collection" for the stale prefixes (and related network configuration information)</t>
</list>
</t>

<t>Clearly, if a host has both working and stale addresses, it is paramount that it employs working addresses for new communication instances. Additionally, a host should also perform garbage collection for the stale prefixes/addresses, since they not only tie system resources, but also prevent communication with the new "owners" of the stale prefixes.</t>

</section>

<section title="Terminology" anchor="term">

<!--
<t>The term "global scope addresses" is used in this document to
   collectively refer to "Global unicast addresses" as defined in
   <xref target="RFC4291"/> and "Unique local addresses" as defined in <xref target="RFC4193"/>, and
   not to "globally reachable" as defined in <xref target="RFC8190"/>.
</t> 
-->


<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in BCP 14 <xref target='RFC2119' /> <xref target='RFC8174' /> when, and only when, they
      appear in all capitals, as shown here.
</t>

</section>


<section title="SLAAC reaction to Flash-renumbering Events" anchor="problem">

<t>As noted in <xref target="intro"/>, in some scenarios the router triggering the renumbering event may be able to explicitly signal the network about this event, while in other scenarios the renumbered hosts may need to infer a renumbering event is taking place. The following subsections analyze specific considerations for each of these scenarios.</t>

<section title="Renumbering without Explicit Signaling">

<t>In the absence of explicit signalling from SLAAC routers (such as sending Prefix Information Options (PIOs) with small lifetimes to deprecate the stale prefixes), stale prefixes will remain preferred and valid according to the Preferred Lifetime and Valid Lifetime values (respectively) of the last received PIO. IPv6 SLAAC employs the following default values for PIOs:
<list style="symbols">
<t>Preferred Lifetime (AdvPreferredLifetime): 604800 seconds (7 days)</t>
<t>Valid Lifetime (AdvValidLifetime): 2592000 seconds (30 days)</t>
</list>
</t>

<t>This means that, in the absence of explicit signaling by a SLAAC router to deprecate a prefix, it will take a host 7 days (one week) to un-prefer the corresponding addresses, and 30 days (one month) to eventually remove any addresses configured for the stale prefix. Clearly, for any practical purposes, employing such long default values is the equivalent of not using any timers at all, since taking 7 days or 30 days (respectively) to recover from a network problem is simply unacceptable.</t>

<t>Use of more appropriate timers in Router Advertisement messages can help limit the amount of time that hosts will maintain stale configuration information. Additionally, hosts are normally in a position to infer that a prefix has become stale -- for example, if a given router ceases to advertise an existing prefix and at the same time starts to advertise a new prefix.</t>

<t><xref target="router-config"/> recommends the use of more appropriate lifetimes for PIOs, while <xref target="hosts-config"/> proposes to cap the accepted Valid Lifetime and Preferred Lifetime values at hosts, such that more appropriate values are employed even in the presence of legacy routers.</t>

<t><xref target="stale-config"/> specifies a local policy that SLAAC hosts can implement to heuristically infer that network configuration information has changed, such that stale configuration can be phased out.</t>
</section>


<section title="Renumbering with Explicit Signaling">

<t>In scenarios where a local router is aware about the renumbering event, it may try to phase out the stale network configuration information. In these scenarios, there are two aspects to be considered:
<list style="symbols">
<t>The amount of time during which the router should continue trying to deprecate the stale network configuration information</t>
<t>The ability of SLAAC hosts to phase out stale configuration in a timelier manner.</t>
</list>
</t>

<t>In the absence of Router Advertisements (RAs) that include PIOs that would reduce the Valid Lifetime and Preferred Lifetime of a prefix, hosts would normally employ the lifetime values from PIO options of the last received RA messages. Since the network could be partitioned for an arbitrarily long period of time, a router would need to try to "unprefer" a prefix for the amount of time employed for the "Preferred Lifetime", and try to invalidate the prefix for the amount of time employed for the "Valid Lifetime" (see Section 12 of <xref target="RFC4861"/>). 
</t>
<t>
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
Once the number of seconds in the original "Preferred Lifetime" have elapsed, all hosts would have "unpreferred" the corresponding addresses anyway, while once the number of seconds in the "Valid Lifetime" have elapsed, the corresponding addresses would be invalidated and removed.
</t>
</list>
</t>
<t>Thus, use of more appropriate default lifetimes for PIOs, as proposed in <xref target="router-config"/>, would reduce the amount of time a stale prefix would need to be announced as such by a router in order to make sure that it is unpreferred/invalidated.</t>


<t>In scenarios where a router has positive knowledge that a prefix has become invalid and thus could signal this condition to local hosts, the current specifications will prevent SLAAC hosts from fully recovering from such stale information. Item "e)" of Section 5.5.3 of <xref target="RFC4862"/> specifies that an RA may never reduce the "RemainingLifetime" to less than two hours. Additionally, if the RemainingLifetime of an address is smaller than 2 hours, then a Valid Lifetime smaller than 2 hours will be ignored. The inability to invalidate a stale prefix would prevent communication with the new "owners" of the stale prefix, and thus is highly undesirable. On the other hand, the Preferred Lifetime of an address *can* be reduced to any value to avoid the use of a stale prefix for new communications. 
</t>
<t><xref target="sig-stale-config"/> updates <xref target="RFC4862"/> such that this restriction in removed, and hosts react to the advertised "Valid Lifetime" (even if it is smaller than 2 hours).</t>
<t>Finally, <xref target="init"/> recommends that routers disseminate network configuration information when a network interface is initialized, such that possibly new configuration information propagates in a timelier manner.</t>
</section>


</section>


      <section title="Improvements to Stateless Address Autoconfiguration (SLAAC)" anchor="host-side">

<!-- XXX: En el algoritmo me queda revisar cuando LTA se setea a 0. Y ahora escribir el resumen de las mitigaciones -->

<t>
The following subsections update <xref target="RFC4861"/> and <xref target="RFC4862"/>, such that the problem discussed in this document is mitigated. The aforementioned updates are mostly orthogonal, and mitigate different aspects of SLAAC that prevent a timely reaction to flash renumbering events.

<list style="symbols">
<t>Reduce the default Valid Lifetime and Preferred Lifetime of PIOs (<xref target="router-config"/>): 
<vspace blankLines="0" />This helps limit the amount of time a host will employ stale information, and also limits the amount of time a router needs to try to obsolete stale information.</t>
<t>Cap the received Valid Lifetime and Preferred Lifetime of PIOs (<xref target="hosts-config"/>): 
<vspace blankLines="0" />This helps limit the amount of time a host will employ stale information, even in the presence of legacy (<xref target="RFC4861"/>) routers.</t>
<t>Honor PIOs with small Valid Lifetimes (<xref target="sig-stale-config"/>): 
<vspace blankLines="0" />This allows routers to invalidate stale prefixes, since otherwise <xref target="RFC4861"/> prevents hosts from honoring PIOs with a Valid Lifetime smaller than two hours.</t>
<t>Recommend routers to retransmit configuration information upon interface initialization/reinitialization (<xref target="init"/>): 
<vspace blankLines="0" />This helps spread the new information in a timelier manner, and also deprecate stale information via host-side heuristics (see <xref target="stale-config"/>).</t>
<t>Recommend routers to always send all options (i.e. the complete configuration information) in RA messages, and in the smallest possible number of packets (<xref target="ras"/>): 
<vspace blankLines="0" />This helps propagate the same information to all hosts, and also allows hosts to better infer that information missing in RA messages has become stale (see <xref target="stale-config"/>).</t>
<t>Infer stale network configuration information from received RAs (<xref target="stale-config"/>): 
<vspace blankLines="0" />This allows hosts to deprecate stale network configuration information, even in the absence of explicit signaling.</t>
</list>
</t>




<section title="More Appropriate Lifetime Values" anchor="timers">

<section title="Router Configuration Variables" anchor="router-config">

<t>The default value for the "lifetime" parameters in PIOs is updated as follows:

<list>
<t>AdvPreferredLifetime: AdvDefaultLifetime</t>
<t>AdvValidLifetime: 48 * AdvDefaultLifetime</t>
</list>
</t>


<t>
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
<xref target="RFC4861"/> specifies AdvDefaultLifetime as 3 * MaxRtrAdvInterval (which defaults to 600 seconds). This means this document specifies AdvPreferredLifetime as 1800 seconds. This document specifies AdvValidLifetime as 48 * AdvDefaultLifetime, resulting in a AdvValidLifetime of 86400 seconds (1 day). <!-- This value has been set to a somewhat arbitrarily long value to prevent possible transient network problems from causing addresses to incorrectly become invalid. -->
</t>
</list>
</t>



<!-- XXX: Llegue hasta aca revisando -->

<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>The default values for PIO lifetimes should be such that, under normal circumstances (including some packet loss), the associated timers are refreshed/reset, but in the presence of network failures (such as network configuration information becoming stale), some fault recovering action (such as un-preferring the corresponding addresses and subsequently removing them) is triggered.
</t>
<t>In the context of <xref target="RFC8028"/>, where it is clear that the use of addresses configured for a given prefix is tied to the next-hop router that advertised the prefix, the "Preferred Lifetime" of a PIO should never be larger than the "Router Lifetime" (AdvDefaultLifetime) of Router Advertisement messages. Some leeway should be provided for the "Valid Lifetime" to cope with transient network problems.</t>

<t>As a result, this document updates <xref target="RFC4861"/> such that the default Valid Lifetime (AdvValidLifetime) and the default Preferred Lifetime (AdvPreferredLifetime) of PIOs are specified as a function of the default "Router Lifetime" (AdvDefaultLifetime) of Router Advertisement messages.</t>

<t>In the absence of RAs that refresh information, addresses configured for advertised prefixes become un-preferred in a timelier manner, and thus Rule 3 of <xref target="RFC6724"/> will cause other configured addresses (if available) to be preferred.</t>
<!--
<t>Reducing the Valid Lifetime and Preferred Lifetimes of PIOs limits the amount of time hosts may use stale prefixes, and also limits the amount of time that a stale prefix needs to be advertised with a lifetime of "0" on the local network (see Section 12 of <xref target="RFC4861"/>).</t> -->
</list>
</t>
</list>
</t>
</section>


<section title="Processing of PIO Lifetimes at Hosts" anchor="hosts-config">
<!-- <t>Hosts that, for some reason, do not implement the recovery algorithm specified in <xref target="stale-config"/> SHOULD cap the "Valid Lifetime" and "Preferred Lifetime" of PIOs as follows:
-->
<t>Hosts SHOULD cap the "Preferred Lifetime" and "Valid Lifetime" of PIOs as follows:
<list style="symbols">
<t>Preferred Lifetime= MIN(Preferred Lifetime, "Router Lifetime")</t>
<t>Valid Lifetime= MIN(Valid Lifetime, 48 * "Router Lifetime")</t>
</list>

</t>

<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Capping the lifetimes in PIOs as suggested will not eliminate the problem discussed in this document, but will certainly reduce the amount of time it takes for hosts to converge to updated network configuration information, even when the SLAAC router advertises PIOs with the default values specified in <xref target="RFC4861"/> (as opposed to the new default values specified in <xref target="router-config"/>) or when the corresponding router ceases to send RAs.
</t>
</list>
</t>
</list>
</t>


</section>
</section>  <!-- timers -->


<section title="Processing PIO lifetimes" anchor="sig-stale-config">

<t>The entire item "e)" (pp. 19-20) from Section 5.5.3 of <xref target="RFC4862"/> is replaced with the following text:
<list style="hanging">
<t>e)  If the advertised prefix is equal to the prefix of an address
      configured by stateless autoconfiguration in the list, the
      valid lifetime and the preferred lifetime of the address should 
      be updated by processing the Valid Lifetime and the Preferred
      Lifetime (respectively) in the received advertisement.
</t>
</list>
</t>


<t>
<list style="hanging">
<t hangText="NOTE:">
"Processing" the Valid Lifetime and Preferred Lifetime includes capping the received values as specified in <xref target="hosts-config"/> of this document.
</t>
</list>
</t>






<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>
This change allows hosts to react to the information provided by a router that has positive knowledge that a prefix has become invalid.
</t>
<t>Attacks aiming at disabling an advertised prefix via a Valid Lifetime of 0 are not really more harmful than other attacks that can be performed via forged RA messages, such as those aiming at completely disabling a next-hop router via an RA that advertises a Router Lifetime of 0, or  performing a Denial of Service (DoS) attack by advertising illegitimate prefixes via PIOs. In scenarios where RA-based attacks are of concern, proper mitigations such as RA-Guard <xref target="RFC6105"/> <xref target="RFC7113"/> should be implemented.
</t>
</list>
</t>
</list>
</t>
</section>


<section title="Interface Initialization" anchor="init">
<t>When an interface is initialized, it is paramount that network configuration information is spread on the corresponding network (particularly in scenarios where an interface has been re-initialized, and the conveyed information has changed). Thus, this document replaces the following text from Section 6.2.4 of <xref target="RFC4861"/>:
<list style="hanging">

<t>

   In such cases, the router MAY transmit up to
   MAX_INITIAL_RTR_ADVERTISEMENTS unsolicited advertisements, using the
   same rules as when an interface becomes an advertising interface.
</t>
</list>

with:

<list style="hanging">
<t>
   In such cases, the router SHOULD transmit 
   MAX_INITIAL_RTR_ADVERTISEMENTS unsolicited advertisements, using the
   same rules as when an interface becomes an advertising interface.
</t>
</list>
</t>
<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Use of stale information can lead to interoperability problems. Therefore, it is paramount that new configuration information propagates in a timelier manner to all hosts.</t>
</list>
</t>
</list>
</t>

<t>
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
<xref target="I-D.ietf-v6ops-cpe-slaac-renum"/> specifies recommendations for CPE routers to deprecate any stale network configuration information.</t>
</list>
</t>


</section>


<section title="Conveying Information in Router Advertisement (RA) Messages" anchor="ras">
<t>Intentionally omitting information in Router Advertisements may prevent the propagation of such information. To the best of the authors' knowledge, SLAAC routers always send all options in the smallest possible number of packets, so this section simply more clearly aligns the existing specifications with existing implementations.</t>

<t>This document replaces the following text from Section 6.2.3 of <xref target="RFC4861"/>:
<list style="hanging">

<t>
   A router MAY choose not to include some or all options when sending
   unsolicited Router Advertisements.  For example, if prefix lifetimes
   are much longer than AdvDefaultLifetime, including them every few
   advertisements may be sufficient.  However, when responding to a
   Router Solicitation or while sending the first few initial
   unsolicited advertisements, a router SHOULD include all options so
   that all information (e.g., prefixes) is propagated quickly during
   system initialization.</t>

<t>
   If including all options causes the size of an advertisement to
   exceed the link MTU, multiple advertisements can be sent, each
   containing a subset of the options.
</t>
</list>

with:

<list style="hanging">

<t>
   When sending Router Advertisements, a router SHOULD include all 
   options.</t>
<t>
   If including all options causes the size of an advertisement to
   exceed the link MTU, multiple advertisements can be sent, each
   containing a subset of the options. In all cases, routers SHOULD
   convey all information using the smallest possible number of 
   packets.
</t>
</list>
</t>
<t>
<list style="hanging">
<t hangText="RATIONALE:">
<list style="symbols">
<t>Sending information in the smallest possible number of packets was somewhat already implied from the original text in <xref target="RFC4861"/>, and in this respect the proposed update just adds clarity. Including all options when sending RAs both leads to simpler code (as opposed to dealing with special cases where specific information is intentionally omitted), and also helps hosts infer network configuration changes in a timelier manner. Note that while <xref target="RFC4861"/> allowed some RAs to omit some options, the authors of this document know of no implementation of such behavior. Therefore, the proposed change simply reflects existing practice.</t>
</list>
</t>
</list>
</t>




</section>


<section title="Recovery from Stale Configuration Information without Explicit Signaling" anchor="stale-config">

<t>[NOTE: Based on recent mailing-list discussions, the authors have kept the algorithm from previous versions of the document (in <xref target="counter-based"/>) and have also added a new alternative algorithm (in <xref target="timer-based"/>). It is up to the WG to pick one, or keep specifying both alternative algorithms].
</t>

<t>The following subsections specify two alternative algorithms that allow hosts to infer when a previously-advertised prefix has become stale, such that previously-configured addresses are "phased-out" and the host can transition to the newly-advertised prefixes in a timelier manner. Most of the value of these algorithms is in being able to mitigate the problem discussed in this document at hosts themselves, without requiring updates on local routers.</t>

<t>Host can normally infer when network configuration information has changed. For example, if a SLAAC router (as identified by its link-local address) has ceased to advertise a previously-advertised prefix and has also started to advertise new prefixes via PIOs, this should be considered an indication that network configuration information has changed. Implementation of this kind of heuristics would allow a timelier reaction to network configuration changes even in scenarios where there is no explicit signaling from the network -- thus improving robustness.
</t>

<t>
The basic premise behind these algorithms is that, when a router advertises new prefixes for address configuration (i.e., PIOs with the "A" bit set), but fails to advertise the previously-advertised prefixes, this is an indication that the previously-advertised prefixes have become stale. Therefore, if this was the only router advertising the prefix, configured addresses for the stale prefixes should be "un-preferred" (such that they are not employed for new communication instances), and they should eventually be removed (if this condition persists). If other routers were advertising the same prefix, the prefix should simply be dis-associated with the router that ceased to advertise it, and the fate of the corresponding addresses should depend on the routers that continue advertising the prefix.</t>


<t>The two alternative algorithms specified in the following subsections aim at producing the same outcome, but differ in some details:
<list style="symbols">
<t>Algorithm #1 (<xref target="counter-based"/>) employs counters to keep track on the number of RAs that have failed to advertise a given prefix, and reacts based on the number of such packets. On the other hand, Algorithm #2 (<xref target="timer-based"/> reacts to a PIO that fails to advertise a prefix by simply reducing the Preferred and Valid Lifetime of a prefix; such timers will be refresh if the prefix is not stale, but will otherwise time out and cause the corresponding addresses to be deprecated and eventually invalidated.</t>

<t>Algorithm #1 assumes that SLAAC information (at least PIOs) is conveyed in the smallest possible number of packets, or at least in at most two packets (as per the default values for the configuration variables in the algorithm). While this reflects the behavior of real-world implementations, this is not a formal requirement in <xref target="RFC4861"/>. On the other hand, Algorithm #2 does not require this assumption.</t>
</list>

</t>


<section title="Counter-based Algorithm (Algorithm #1)" anchor="counter-based">
<!--
<t>The goal of the algorithm specified in this section is to allow hosts to infer when a previously-advertised prefix has become stale, such that previously-configured addresses are "phased-out" and the host can transition to the newly-advertised prefixes in a timelier manner. Most of the value of this algorithm is in being able to mitigate the problem discussed in this document at hosts themselves, without requiring updates on local routers.</t>


<t>Host can normally infer when network configuration information has changed. For example, if a SLAAC router (as identified by its link-local address) has ceased to advertise a previously-advertised prefix and has also started to advertise new prefixes via PIOs, this should be considered an indication that network configuration information has changed. Implementation of this kind of heuristics would allow a timelier reaction to network configuration changes even in scenarios where there is no explicit signaling from the network - - thus improving robustness.
</t>
-->



<t>The algorithm specified in this section updates the state of a configured address upon receipt of a number of consecutive RAs that, while carrying PIOs, fail to advertise a previously-advertised prefix. This algorithm can accommodate the (theoretical) scenario where a router may split PIOs among a number of RA messages.</t>


	<t>Local information maintained for each prefix advertised by each router is augmented with one counter named "LTA" (Lifetime Avoidance) that defaults to 0, and that counts the number of consecutive RAs received from the corresponding router that do not advertise the corresponding prefix. 
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
Hosts are already expected to keep track of which router has advertised which prefix in order to be able to properly select the first-hop router in multiple-prefix networks <xref target="RFC8028"/> <xref target="RFC8504"/>. Throughout this specification, each router is identified by its link-local address.</t>
</list>
</t>

<t>This algorithm employs two configuration variables:
<list style="hanging">
<t hangText="LTA_RAS_UNPREFER:">
<vspace blankLines="0" />Number of consecutive RAs *not* carrying a given prefix from a given router that will cause the prefix to become unpreferred/deprecated. It defaults to LTA_RAS_UNPREFER_DEFAULT, which this document specifies as 2.
</t>
<t hangText="LTA_RAS_INVALID:">
<vspace blankLines="0" />Number of consecutive RAs *not* carrying a given prefix from a given router that will cause the prefix to become invalid. It MUST be larger than LTA_RAS_UNPREFER. It defaults to LTA_RAS_INVALID_DEFAULT, which this document specifies as 4<!--40 * LTA_RAS_UNPREFER_DEFAULT. The default value is set to and arbitrarily large value that will limite the lifetime of a prefix while still acommodating possible transient network problems -->.
</t>
</list>
</t>

<t>After normal processing of Router Advertisement messages, Router Advertisements that contain at least one PIO MUST be processed as follows:

<list style="symbols">


	<t>The LTA counter for each prefix advertised in the current Router Advertisement, and associated with this particular router, should be set to 0.</t>

	<t>If the packet contains at least one PIO that advertises a Global Unicast <xref target="RFC4291"/> prefix then, for each Global Unicast prefix that had been previously advertised by this router but that is not advertised via a PIO <!--with the "A" flag set -->in the received RA, proceed as follows:
		<list style="symbols">
			<t>Increment the correspoding LTA counter by one.</t>

			<t>IF LTA &gt;= LAT_RAS_INVALID, then:
				<list style="symbols">
<t>IF this is the only router advertising this prefix, set the "Valid Lifetime" of IPv6 addresses corresponding to this prefix to 0, and the "Valid Lifetime" for this prefix (as used for on-link determination) to 0. This will cause the removal of all addresses for this prefix and of any routes for this prefix associated with the this router.</t>
<t>ELSE IF this prefix has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t>
</list>
</t>

			<t>ELSE IF LTA &gt;= LTA_RAS_UNPREFER, then:
				<list style="symbols">
					<t>IF this is the only router advertising this prefix, set the "Preferred Lifetime" of addresses corresponding to this prefix to 0. This will cause the corresponding addresses to become un-preferred/deprecated.</t>

					<t>ELSE IF this prefix has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t>
				</list>
			</t>


		</list>
	</t>


	<t>If the packet contains at least one PIO that advertises a Unique Local <xref target="RFC4193"/> prefix then, for each Unique Local prefix that had been previously advertised by this router but that is not advertised via a PIO <!--with the "A" flag set -->in the received RA, proceed as follows:
		<list style="symbols">
			<t>Increment the corresponding LTA counter by one.</t>

			<t>IF LTA &gt;= LAT_RAS_INVALID, then:
				<list style="symbols">
<t>IF this is the only router advertising this prefix, set the "Valid Lifetime" of addresses corresponding to this prefix to 0, and the "Valid Lifetime" for this prefix (as used for on-link determination) to 0. This will cause the removal of all addresses for this prefix and of any routes for this prefix associated with the this router.</t>
<t>ELSE IF this prefix has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t>
</list>
</t>

			<t>ELSE IF LTA &gt;= LTA_RAS_UNPREFER, then:
				<list style="symbols">
					<t>IF this is the only router advertising this prefix, set the "Preferred Lifetime" of addresses corresponding to this prefix to 0. This will cause the corresponding addresses to become un-preferred/deprecated.</t>

					<t>ELSE IF this prefix has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t>
				</list>
			</t>


		</list>
	</t>


</list>
</t>

<t><xref target="timeline"/> illustrates a possible packet exchange and the operation of the algorithm for a typical scenario.</t>


<t>NOTES:
<list style="symbols">
<t>The processing of RAs that do not contain any PIOs with the "A" bit set remains unaffected.</t>
<t>The aforementioned processing assumes that PIOs will be spread among *at most* LTA_RAS_UNPREFER RAs.
<list style="hanging">
<t>We know of no implementations that intentionally spread network configuration information among multiple RAs, and know of no real deployment scenarios where the amount of SLAAC information requires that it be split into multiple Router Advertisement Messages. Therefore, while we have been conservative in selecting the default values for LTA_RAS_UNPREFER and LTA_RAS_INVALID as 2 and 4 (respectively), we believe that all real-world scenarios would be able to set them to 1 and 2 (respectively), without any impact on robustness. <xref target="ras"/> provides additional clarifications regarding how information is conveyed in Router Advertisement messages.
</t>
</list>
</t>
<t>If the only prefix that has so far been advertised on the local network is the prefix that has become stale, and there is no other prefix being advertised, the traditional processing is unaffected (the mechanism discussed in this document will *never* be triggered because received RAs will not contain other PIOs with the "A" bit set). The rationale here is that it is better to have some address, than no address at all.</t>

<t>Only RAs that advertise Global Unicast prefixes may deprecate Global Unicast Addresses (GUAs), while only RAs that advertise Unique Local prefixes may deprecate Unique Local Addresses (ULAs).</t>

<t>The specified modification takes the conservative approach of first setting the "Preferred Lifetime" to 0 (such that addresses become non-preferred), and eventually setting the "Valid Lifetime" to 0 (such that addresses are completely removed). Once the addresses for this prefix have been removed, associated routes incorporated by the original RA messages SHOULD also be removed.</t>
<t>In cases where this scenario has been triggered by a CPE router crashing and rebooting, it would take hosts less than one minute to mark the corresponding addresses as "not preferred" (when using the default value for LTA_RAS_UNPREFER), and less than five minutes to completely remove such addresses from the system (when using the default value for LAT_RAS_INVALID).
<list style="hanging">
<t>
Section 6.2.4 of <xref target="RFC4861"/> specifies that when an interface becomes an advertising interface, the first few unsolicited RAs (up to MAX_INITIAL_RTR_ADVERTISEMENTS, specified as 3) will be sent at intervals of at most MAX_INITIAL_RTR_ADVERT_INTERVAL (specified as 16 seconds). This means that, using the default value for LTA_RAS_UNPREFER (LTA_RAS_UNPREFER_DEFAULT=2), in the worst-case scenario it would take hosts 32 seconds to mark stale addresses as "deprecated". The fourth unsolicited RA will be sent after a random amount of time between MinRtrAdvInterval (default: 0.33 * MaxRtrAdvInterval) and MaxRtrAdvInterval (default: 600 seconds) has elapsed, thus meaning that, when using the default value for LTA_RAS_INVALID (LTA_RAS_INVALID_DEFAULT=4) the stale addresses would be removed after between 3.3 and 10 minutes of being marked as "not preferred".
</t>
</list>
</t>
</list>

</t>
</section>

<section title="Timer-based Algorithm (Algorithm #2)" anchor="timer-based">

<t>The algorithm specified in this section updates the state of a configured address upon receipt of an RA that, while carrying PIOs, fails to advertise a previously-advertised prefix. Namely, such an RA reduces the "Preferred Lifetime" of the corresponding addresses, to cause such addresses to be quickly deprecated ("un-preferred"), while accommodating the case where the advertising router might be sending SLAAC options in multiple separate packets. Similarly, the "Valid Lifetime" of such addresses is reduced, such that the addresses are invalidated in a timelier manner, while still providing some leeway for the local router to re-advertise the corresponding prefix.</t>


	<t>Local information maintained for each prefix advertised by each router is augmented with one variable named "LTA_LA" (Lifetime Avoidance_Last Advertised), that records the last time a given prefix has been advertised by a given router.
<list style="hanging">
<t hangText="NOTE:"><vspace blankLines="0" />
While not strictly required, we note that existing implementations may already record the last time a prefix has been advertised by a given router as a possible implementation approach to be able to compute the remaining lifetime of an address.</t>
<t>
Hosts are already expected to keep track of which router has advertised which prefix in order to be able to properly select the first-hop router in multiple-prefix networks <xref target="RFC8028"/> <xref target="RFC8504"/>. Throughout this specification, each router is identified by its link-local address.</t>
</list>
</t>

<t>This algorithm employs two configuration variables:
<list style="hanging">
<t hangText="LTA_UNPREFER:">
<vspace blankLines="0" />
A time value (in seconds) to set the "Preferred Lifetime" of addresses corresponding to a given prefix, when a received RA suggests that such addresses might have become stale. It defaults to LTA_UNPREFER_DEFAULT, which this document specifies as 5 seconds. This value is a rough estimate of the maximum amount of time to send a "batch" of RA messages that advertise the complete set of SLAAC information. [NOTE: We believe this variable could be set to a value even smaller than this]
</t>
<t hangText="LTA_INVALID:">
<vspace blankLines="0" />
A time value (in seconds) to set the "Valid Lifetime" of addresses corresponding to a given prefix, and the "Valid Lifetime" of a prefix (for on-link determination), when a received RA suggests that such addresses and prefix might have become stale. It defaults to LTA_INVALID_DEFAULT, which this document specifies as 1800 seconds (which corresponds to the largest possible value for MaxRtrAdvInterval <xref target="RFC4861"/>). [NOTE: We believe that it would be possible to set this variable to smaller values, but just opted for the most conservative setting].
</t>
</list>
</t>

<t>After normal processing of Router Advertisement messages, Router Advertisements that contain at least one PIO MUST be processed as follows:

<list style="symbols">

	<t>For each prefix prefix advertised by a PIO with the "A" flag set, proceed as follows:
	<list style="symbols">
		<t>LTA_LA = current_time()</t>
	</list>
	</t>

	<t>If the RA advertises at least one Global Unicast Prefix then, for each Global Unicast prefix that had been previously advertised by this router but that is not advertised by a PIO <!--with the "A" flag set -->in the received RA, proceed as follows:
		<list style="symbols">
			<t>IF current_time() &gt;= (LTA_LA + LTA_UNPREFER), then:

				<list style="symbols">
					<t>IF this is the only router advertising this prefix, set the "Preferred Lifetime" and the "Valid Lifetime" of IPv6 addresses corresponding to this prefix to LTA_UNPREFER and LTA_INVALID, respectively. Additionally, set the "Valid Lifetime" associated with this prefix (for on-link determination) to LTA_INVALID.</t>

					<t>ELSE IF this prefix has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t> 
				</list>

</t>
		</list>
	</t>


	<t>If the RA advertises at least one Unique Local <xref target="RFC4193"/> prefix then, for each Unique Local prefix that had been previously advertised by this router but that is not advertised by a PIO <!--with the "A" flag set -->in the received RA, proceed as follows:
		<list style="symbols">
			<t>IF current_time() &gt;= (LTA_LA + LTA_UNPREFER), then:

				<list style="symbols">
					<t>IF this is the only router advertising this prefix, set the "Preferred Lifetime" and the "Valid Lifetime" of IPv6 addresses corresponding to this prefix to LTA_UNPREFER and LTA_INVALID, respectively. Additionally, set the "Valid Lifetime" associated with this prefix (for on-link determination) to LTA_INVALID.</t>

					<t>ELSE IF this prefix has been advertised my multiple neighboring routers, simply disassociate this prefix with this particular router. This will cause the fate of this prefix to depend on the other routers.</t> 
				</list>

</t>
		</list>
	</t>


</list>
</t>

<!--
<t><xref target="timeline"/> illustrates a possible packet exchange and the operation of the algorithm for a typical scenario.</t>
-->

<t>NOTES:
<list style="symbols">
<t>current_time() is a monotonically-increasing counter that is incremented once per second, and is employed to measure time.</t>
<t>The processing of RAs that do not contain any PIOs with the "A" bit set remains unaffected.</t>
<t>If the only prefix that has so far been advertised on the local network is the prefix that has become stale, and there is no other prefix being advertised, the traditional processing is unaffected (the mechanism discussed in this document will *never* be triggered because received RAs will not contain other PIOs with the "A" bit set). The rationale here is that it is better to have some address, than no address at all.</t>

<t>Only RAs that advertise Global Unicast prefixes may deprecate Global Unicast Addresses (GUAs), while only RAs that advertise Unique Local prefixes may deprecate Unique Local Addresses (ULAs).</t>

<t>The specified modification takes the conservative approach of setting the "Preferred Lifetime" to LTA_UNPREFER to allow for SLAAC information to be conveyed in multiple RA messages (that can be sent during a window of LTA_UNPREFER seconds), and setting the "Valid Lifetime" to LTA_INVALID (to accommodate for possible packet loss, and transient problems). Once the addresses for this prefix have been removed, associated routes incorporated by the original RA messages SHOULD also be removed.</t>
<t>In cases where this scenario has been triggered by a CPE router crashing and rebooting, it would take hosts LTA_UNPREFER seconds to mark the corresponding addresses as "not preferred", and LTA_INVALID to completely remove such addresses from the system -- that is, 5 seconds and 600 seconds, respectively.

</t>
</list>

</t>
</section>

      </section>
</section>


    <section title="IANA Considerations">
      <t>
This document has no actions for IANA.
</t>
    </section>

    <section title="Security Considerations">

<t>When it comes to the algorithm in <xref target="counter-based"/>, an attacker that could impersonate a router could forge multiple RA packets that contain PIOs for prefixes that are currently not advertised on the local network and that fail to include previously-advertised prefixes, to trigger the mechanism specified in this document (and thus cause existing addresses to be deprecated, and eventually removed).  On the other hand, when it comes to the algorithm in <xref target="timer-based"/>, an attacker could impersonate the legitimate router and send an RA that does not advertise legitimate prefixes being employed in the local network. This cause the corresponding addresses to become deprecated. However, the addresses would not become invalid since normal unsolicited RA messages would refresh the "Preferred Lifetime" and "Valid Lifetime" of such addresses.</t>

<t>However, an attacker that can impersonate a router could more easily deprecate addresses by advertising the legitimate prefixes with the "Preferred Lifetime" set to 0, or perform a plethora of other possible of Denial of Service attacks based on forged RA messages. Therefore, when attacks based on forged RA packets are a concern, technologies such as RA-Guard <xref target="RFC6105"/> <xref target="RFC7113"/> should be deployed.</t>

<t>Capping the "Valid Lifetime" and "Preferred Lifetime" at hosts may help limit the duration of the effects of non-sustained attacks that employ forged RAs with PIOs, since hosts would now recover in a timelier manner.</t>

    </section>



<section title="Acknowledgments">
<t>The authors would like to thank (in alphabetical order) Mikael Abrahamsson, Luis Balbinot, Brian Carpenter, Owen DeLong, Gert Doering, Nick Hilliard, Bob Hinden, Philip Homburg, Lee Howard, Christian Huitema, Jen Linkova, Albert Manfredi, Jordi Palet Martinez, Michael Richardson, Mark Smith, Tarko Tikan, and Ole Troan, for providing valuable comments on earlier versions of this document.</t>

<t>The algorithm specified in <xref target="timer-based"/> is the result of mailing-list discussions over previous versions of this document with Philip Homburg.</t>

<t>Fernando would like to thank <!--Niloofar Adeli (Shatel, Iran), -->Alejandro D'Egidio and Sander Steffann for a discussion of these issues.</t>
<t>Fernando would also like to thank Brian Carpenter who, over the years, has answered many questions and provided valuable comments that has benefited his protocol-related work.</t>

      <t>The problem discussed in this document has been previously documented by Jen Linkova in <xref target="I-D.linkova-6man-default-addr-selection-update"/>, and also in <xref target="RIPE-690"/>.</t>
    </section>

  </middle>
  <back>

    <references title="Normative References">
	<?rfc include="reference.RFC.2119" ?>
	<?rfc include="reference.RFC.4193" ?>
	<?rfc include="reference.RFC.4291" ?>
	<?rfc include="reference.RFC.8028" ?>
	<?rfc include="reference.RFC.4861" ?>
	<?rfc include="reference.RFC.4862" ?>
	<?rfc include="reference.RFC.8174" ?>
	<?rfc include="reference.RFC.8504" ?>
	</references>





    <references title="Informative References">

	<?rfc include="reference.RFC.2827" ?>
	<?rfc include="reference.RFC.5927" ?>
	<?rfc include="reference.RFC.6105" ?>
	<?rfc include="reference.RFC.6724" ?>
<!--	<?rfc include="reference.RFC.7084" ?>  CPE -->
	<?rfc include="reference.RFC.7113" ?>
	<?rfc include="reference.I-D.linkova-6man-default-addr-selection-update" ?>
	<?rfc include="reference.I-D.ietf-v6ops-slaac-renum" ?>
	<?rfc include="reference.I-D.ietf-v6ops-cpe-slaac-renum" ?>




	<reference anchor="RIPE-690" target="https://www.ripe.net/publications/docs/ripe-690">
		<front>
			<title>Best Current Operational Practice for Operators: IPv6 prefix assignment for end-users - persistent vs non-persistent, and what size to choose</title>


    <author fullname="Jan Zorz" initials="J." surname="Zorz">

    </author>


    <author fullname="Sander Steffannz" initials="S." surname="Zorz">

    </author>
    <author fullname="Primoz Drazumeric" initials="P." surname="Drazumeric">

    </author>
    <author fullname="Mark Townsley" initials="M." surname="Townsley">

    </author>
    <author fullname="Andrew Alston" initials="J." surname="Alston">

    </author>
    <author fullname="Gert Doering" initials="G." surname="Doering">

    </author>
    <author fullname="Jordi Palet" initials="J." surname="Palet">

    </author>
    <author fullname="Jen Linkova" initials="J." surname="Linkova">

    </author>


    <author fullname="Luis Balbinot" initials="L." surname="Balbinot">

    </author>

    <author fullname="Kevin Meynell" initials="K." surname="Meynell">

    </author>


    <author fullname="Lee Howard" initials="L." surname="Howard">

    </author>






			<date month="October" year="2017"/>
		</front>
		<seriesInfo name="RIPE" value="690"/>
	</reference>







    </references>



<section anchor="timeline" title="Sample Timeline for Algorithm #1">
<t>This section shows a sample packet exchange that illustrates the algorithm specified in <xref target="counter-based"/> (Algorithm #1):</t>
<t>
<figure><artwork><![CDATA[
 Router                                           Host
       RA, PIO={2001:DB8:1::/64, L=1, A=1}
     -------------------------------------->
                                             [Host configures addrs
                                               for this prefix]
                                                  LTA=0

       RA, PIO={2001:DB8:1::/64, L=1, A=1}
     -------------------------------------->  
                                             [Normal proc. of RA]
                        .
                        .
[Router reboots]

       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->   {2001:DB8:1::/64,
                                                   LTA=1}
                        .
                        .
       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->   {2001:DB8:1::/64,
                                                   LTA=2}
                                            LTA==LTA_RAS_UNPREFER
                                                Pref. Lftime=0
                                                  
                        .
                        .
       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->  {2001:DB8:1::/64,
                                                   LTA=3}
                        .
                        .
       RA, PIO={2001:DB8:2::/64, L=1, A=1}
     -------------------------------------->  {2001:DB8:1::/64,
                                                   LTA=4}
                                            LTA==LTA_RAS_INVALID
                                               Valid Lftime=0
                                               (Addr. Removed!)
]]></artwork></figure>
</t>
</section>


<section anchor="other" title="Analysis of Some Suggested Workarounds">
<t>[This section is to be removed before publication of this document as an RFC].</t>
<t>During the discussion of this document, some alternative workarounds were suggested on the 6man mailing-list. The following subsections analyze these suggested workarounds, in the hopes of avoiding rehashing the same discussions.</t>

<section anchor="icmp" title="On a Possible Reaction to ICMPv6 Error Messages">
<t>It has been suggested that if configured addresses become stale, a CPE enforcing ingress/egress filtering (BCP38) (<xref target="RFC2827"/>) could send ICMPv6 Type 1 (Destination Unreachable) Code 5 (Source address failed ingress/egress policy) error messages to the sending node, and that, upon receipt of such error messages, the sending node could perform heuristics that might help to mitigate the problem discussed in this document.</t>

<t>The aforementioned proposal has a number of drawbacks and limitations:
	<list style="symbols">
		<t>It assumes that the CPE routers enforce ingress/egress filtering <xref target="RFC2827"/>. While this is desirable behaviour, it cannot be relied upon.</t>
		<t>It assumes that if the CPE enforces ingress/egress filtering, the CPE will signal the packet drops to the sending node with ICMPv6 Type 1 (Destination Unreachable) Code 5 (Source address failed ingress/egress policy) error messages. While this may be desirable, <xref target="RFC2827"/> does not suggest signaling the packet drops with ICMPv6 error messages, let alone the use of specific error messages (such as Type 1 Code 5) as suggested.</t>
		<t>ICMPv6 Type 1 Code 5 could be interpreted as the employed address being stale, but also as a selected route being inappropriate/suboptimal. If the later, un-preferring addresses or removing addresses upon receipt of these error messages would be inappropriate.</t>
		<t>Reacting to these error messages would create a new attack vector that could be exploited from remote networks. This is of particular concern since ICMP-based attacks do not even require that the Source Address of the attack packets be spoofed <xref target="RFC5927"/>.</t>
	</list>
</t>
</section>

<section anchor="sas" title="On a Possible Improvement to Source Address Selection">

<t><xref target="RFC6724"/> specifies source address selection (SAS) for IPv6. Conceptually, it sorts the candidate set of source addresses for a given destination, based on a number of pair-wise comparison rules that must be successively applied until there is a "winning" address.</t>

<t>An implementation might improve source address selection, and prefer the most-recently advertised information. In order to incorporate the "freshness" of information in source address selection, an implementation would be updated as follows:
	<list style="symbols">
		<t>The node is assumed to maintain a timer/counter that is updated at least once per second. For example, the time(2) function from unix-like systems could be employed for this purpose.</t>
		<t>The local information associated with each prefix advertised via RAs on the local network is augmented with a "LastAdvertised" timestamp value. Whenever an RA with a PIO with the "A" bit set for such prefix is received, the "LastAdvertised" timestamp is updated with the current value of the timer/counter.</t>
		<t><xref target="RFC6724"/> is updated such that this rule is incorporated:
			<list style="hanging">
				<t hangText="Rule 7.5: Prefer fresh information">
   If one of the two source addresses corresponds to a prefix that has been more recently advertised, say LastAdvertised(SA) > LastAdvertised(SA), then prefer that address (SA in our case).
				</t>
			</list>
		</t>
	</list>
</t>

<t>A clear benefit of this approach is that a host will normally prefer "fresh" addresses over possibly stale addresses.</t>

<t>However, there are a number of drawbacks associated with this approach:
	<list style="symbols">
		<t>In scenarios where multiple prefixes are being advertised on the same LAN segment, the new SAS rule is *guaranteed* to result in non-deterministic behaviour, with hosts frequently changing the default source address. This is certainly not desirable from a troubleshooting perspective.</t>

		<t>Since the rule must be incorporated before "Rule 8: Use longest matching prefix" from <xref target="RFC6724"/>, it may lead to suboptimal paths.
		</t>

		<t>This new rule may help to improve the selection of a source address, but it does not help with the housekeeping (garbage collection) of configured information:
			<list style="symbols">
				<t>If the stale prefix is re-used in another network, nodes employing stale addresses and routes for this prefix will be unable to communicate with the new "owner" of the prefix, since the stale prefix will most likely be considered "on-link".</t>
				<t>Given that the currently recommended default value for the "Valid Lifetime" of PIOs is 2592000 seconds (30 days), it would take too long for hosts to remove the configured addresses and routes for the stale prefix. While the proposed update in <xref target="timers"/> of this document would mitigate this problem, the lifetimes advertised by the local SLAAC router are not under the control of hosts.</t>
			</list>
		</t>



	</list>
</t>

<t>As a result, updating IPv6 source address selection does not relieve nodes from improving their SLAAC implementations as specified in <xref target="host-side"/>, if at all desirable. On the other hand, the algorithm specified in <xref target="stale-config"/> would result in Rule 3 of <xref target="RFC6724"/> employing fresh addresses, without leading to non-deterministic behaviour.
</t>
</section>
</section>

  </back>
</rfc>
<!--
Local Variables:
mode:xml
End:
=-->
